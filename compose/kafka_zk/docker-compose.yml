version: "3.8" 

services:
  #这里配子一个zookeeper服务并声明为模板 zk-server
  zoo1: &zk-server
    image: zookeeper:3.7.2-jre-17
    hostname: zoo1
    #ports:
    #  - 2181:2181
    environment: &zk-env
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
      ZOO_STANDALONE_ENABLED: false
      ZOO_MY_ID: 1
    volumes: 
      - ./data/zookeeper/node1/logs:/logs
      - ./data/zookeeper/node1/data:/data
      - ./data/zookeeper/node1/datalog:/datalog
    networks:
      - kafka

  zoo2:
    <<: *zk-server
    hostname: zoo2
    environment:
      <<: *zk-env
      ZOO_MY_ID: 2
    volumes: 
      - ./data/zookeeper/node2/logs:/logs
      - ./data/zookeeper/node2/data:/data
      - ./data/zookeeper/node2/datalog:/datalog

  zoo3:
    <<: *zk-server
    hostname: zoo3
    environment:
      <<: *zk-env
      ZOO_MY_ID: 3
    volumes: 
      - ./data/zookeeper/node3/logs:/logs
      - ./data/zookeeper/node3/data:/data
      - ./data/zookeeper/node3/datalog:/datalog

  zoonavigator:
    hostname: zoonavigator
    image: elkozmon/zoonavigator:latest
    networks:
      - kafka
    environment:
      - HTTP_PORT=9000
    container_name: zoonavigator
    ports:
      - "9000:9000"
    depends_on: 
      - zoo1
      - zoo2
      - zoo3

  kfk1: &kfk-server
    image: docker.io/bitnami/kafka:3.5
    hostname: kafka1
    environment: &kfk-env
      ALLOW_PLAINTEXT_LISTENER: yes
      # KRaft settings
      # 使用kraft需要配置这项，zookeeper不需要
      # KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv2
      # KAFKA_CFG_PROCESS_ROLES: controller,broker
      # node id + hostname + port
      # KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka3:9093,1@kafka1:9093,2@kafka2:9093
      # Listeners
      # KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_CFG_NODE_ID: 1
    depends_on: 
      - zoo1
      - zoo2
      - zoo3
    volumes: 
      - ./data/kafka/kafka1:/bitnami/kafka
    networks: 
      - kafka
  kfk2:
    <<: *kfk-server
    hostname: kafka2
    environment: 
      << : *kfk-env
      KAFKA_CFG_NODE_ID: 2
    volumes: 
      - ./data/kafka/kafka2:/bitnami/kafka
  kfk3:
    <<: *kfk-server
    hostname: kafka3
    environment: 
      << : *kfk-env
      KAFKA_CFG_NODE_ID: 3
    volumes:
      - ./data/kafka/kafka3:/bitnami/kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: kafka_test
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KAFKA_CLUSTERS_0_READONLY: true
    # volumes:
    #   - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    depends_on: 
      - kfk1
      - kfk2
      - kfk3
    networks: 
      - kafka

networks:
  kafka:
    driver: bridge