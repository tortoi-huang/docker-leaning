version: "3.1" 

x-kfk-env: &kfk-env
  ALLOW_PLAINTEXT_LISTENER: yes
  KAFKA_CFG_PROCESS_ROLES: controller,broker
  # node id + hostname + port
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@controller0:9093,1@controller1:9093,2@controller2:9093
  KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
  # Listeners
  # KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
  # KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
  # KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  # KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  # KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT

x-kfk-c: &controller-env
  <<: *kfk-env
  KAFKA_CFG_PROCESS_ROLES: controller
  KAFKA_CFG_LISTENERS: CONTROLLER://:9093
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
x-kfk-b: &broker-env
  <<: *kfk-env
  KAFKA_CFG_PROCESS_ROLES: broker
  KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT

x-kfk: &kfk-server
  image: bitnami/kafka:3.8.0
  networks: 
    - flink-cluster
  
x-kfk-controller: &kfk-controller
  <<: *kfk-server
  healthcheck:
    test: 
      - "CMD"
      - "/opt/bitnami/kafka/bin/kafka-metadata-quorum.sh"
      - "--bootstrap-controller"
      - "localhost:9093"
      - "describe"
      - "--status"
    interval: 10s
    timeout: 5s
    retries: 30
  
x-kfk-broker: &kfk-broker
  <<: *kfk-server
  healthcheck:
    test: 
      - "CMD"
      - "/opt/bitnami/kafka/bin/kafka-metadata-quorum.sh"
      - "--bootstrap-server"
      - "localhost:9092"
      - "describe"
      - "--status"
    interval: 10s
    timeout: 5s
    retries: 30
  depends_on: 
    controller0: 
      condition: service_healthy
    controller1: 
      condition: service_healthy
    controller2: 
      condition: service_healthy

x-flink: &flink
  image: flink:1.20.0-java17
  environment: &flink-env
    FLINK_PROPERTIES: "jobmanager.rpc.address: jobmanager"
  networks: 
    - flink-cluster
x-flink-task: &flink-task
  <<: *flink
  command: taskmanager
  environment: &flink-task-env
    FLINK_PROPERTIES: "jobmanager.rpc.address: jobmanager"
  depends_on: 
    jobmanager:
      condition: service_healthy

services:
  controller0: 
    <<: *kfk-controller
    container_name: controller0
    hostname: controller0
    environment:
      <<: *controller-env
      KAFKA_CFG_NODE_ID: 0
    volumes: 
      - controller_0_data:/bitnami/kafka
  controller1:
    <<: *kfk-controller
    container_name: controller1
    hostname: controller1
    environment:
      <<: *controller-env
      KAFKA_CFG_NODE_ID: 1
    volumes: 
      - controller_1_data:/bitnami/kafka
  controller2:
    <<: *kfk-controller
    container_name: controller2
    hostname: controller2
    environment:
      <<: *controller-env
      KAFKA_CFG_NODE_ID: 2
    volumes: 
      - controller_2_data:/bitnami/kafka
  
  broker0: 
    <<: *kfk-broker
    container_name: broker0
    hostname: broker0
    environment:
      <<: *broker-env
      KAFKA_CFG_NODE_ID: 3
    volumes: 
      - broker_0_data:/bitnami/kafka
  broker1:
    <<: *kfk-broker
    container_name: broker1
    hostname: broker1
    environment:
      <<: *broker-env
      KAFKA_CFG_NODE_ID: 4
    volumes: 
      - broker_1_data:/bitnami/kafka

  jobmanager:
    <<: *flink
    container_name: jobmgr
    hostname: jobmanager
    command: jobmanager
    ports:
      - "8081:8081"
    environment: 
      <<: *flink-env
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "localhost:8081"
    # volumes: 
    #   - jobmanager_data:/bitnami/kafka
  
  taskmanager0:
    <<: *flink-task
    container_name: taskmgr0
    hostname: taskmanager0
    environment: 
      <<: *flink-task-env
    # volumes: 
    #   - taskmanager0_data:/bitnami/kafka
  taskmanager1:
    <<: *flink-task
    container_name: taskmgr1
    hostname: taskmanager1
    environment: 
      <<: *flink-task-env
    # volumes: 
    #   - taskmanager1_data:/bitnami/kafka
      
  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: mariadb:11.6.1-rc
    environment:
      MARIADB_ROOT_PASSWORD: mypassword
    # 默认数据目录 /var/lib/mysql
    volumes: 
      - mariadb_data:/var/lib/mysql
    networks: 
      - flink-cluster

networks:
  flink-cluster: 
    name: flink-cluster
    # ipam:
    #   driver: default
    #   config: 
    #     - subnet: 192.168.64.0/20
volumes:
  controller_0_data:
    driver: local
  controller_1_data:
    driver: local
  controller_2_data:
    driver: local
  broker_0_data:
    driver: local
  broker_1_data:
    driver: local
  jobmanager_data:
    driver: local
  taskmanager0_data:
    driver: local
  taskmanager1_data:
    driver: local
  mariadb_data:
    driver: local